package modmaker.export;

import java.io.File;
import java.io.FileInputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

public class FileUtils {
	public static void removeDirectory(File directory){
		if(directory.exists()){
			for(File file : directory.listFiles()){
				if(file.isDirectory()){
					FileUtils.removeDirectory(file);
				}
				else{
					file.delete();
				}
			}
			directory.delete();
		}
	}
	/**Folder/home/max/modmakersaves/export/notdef
Folder/home/max/modmakersaves/export/notdef/items
File/home/max/modmakersaves/export/notdef/items/ItemUndifind.java
File/home/max/modmakersaves/export/notdef/items/ItemUndifind4.java
File/home/max/modmakersaves/export/notdef/items/ItemUndifind2.java
File/home/max/modmakersaves/export/notdef/items/ItemUndifind3.java

Folder/home/max/.modmaker/temp/ssss/mod
Folder/home/max/.modmaker/temp/ssss/mod/ssss
File/home/max/.modmaker/temp/ssss/mod/ssss/items.json
	 */
	public static void writeSub(String orginalFilePath, File file , ZipOutputStream out) throws Exception{
		for(File f : file.listFiles()){
			if(f.isDirectory()){
				System.out.println("Folder" + f.getAbsolutePath());
				FileUtils.writeSub(orginalFilePath, f, out);
			}
			else{
				FileInputStream in = new FileInputStream(f);
				System.out.println("File" + f.getAbsolutePath());

				// name the file inside the zip  file 
				out.putNextEntry(new ZipEntry(f.getAbsolutePath().replace(orginalFilePath, ""))); 

				// buffer size
				byte[] b = new byte[1024];
				int count;

				while ((count = in.read(b)) > 0) {
					out.write(b, 0, count);
				}
				in.close();
			}
		}
	}
}
