package modmaker.export;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import modmaker.Item;
import modmaker.Mod;
import modmaker.Start;

import com.google.gson.Gson;

public class Save {
	public static void save(Mod mod, File file){
		try{
		file.mkdirs();
		Gson gson = new Gson();
		StringBuilder builder = new StringBuilder();
		for(Item item : mod.items){
			builder.append(gson.toJson(item) + "\n");
		}
		BufferedWriter writer = new BufferedWriter(new FileWriter(Start.main.workingDir.getAbsolutePath() + "/temp/" + file.getName() + "/items.json"));
		writer.append(builder.toString());
		writer.close();
		e.printStackTrace();
		ZipOutputStream out;
		if(file.getName().contains("."))
			out = new ZipOutputStream(new FileOutputStream(file.getAbsolutePath()));
		else
			out = new ZipOutputStream(new FileOutputStream(file.getAbsolutePath() + ".zip"));
		for(File f : new File(file.getAbsolutePath()).listFiles()){
			if(f.isDirectory()){
				FileUtils.writeSub(file.getAbsolutePath(), f, out);
			}
			else{
				FileInputStream in = new FileInputStream(f);


				out.putNextEntry(new ZipEntry(f.getAbsolutePath().replace(file.getAbsolutePath(), ""))); 

				byte[] b = new byte[1024];
				int count;

				while ((count = in.read(b)) > 0) {
					out.write(b, 0, count);
				}
				in.close();
			}
		}
		FileUtils.removeDirectory(new File(Start.main.workingDir.getAbsolutePath() + "/temp/" + file.getName()));
		}
		catch(Exception e){
			e.printStackTrace();
		}
	}
}
