package modmaker.export;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import modmaker.Item;
import modmaker.Mod;
import modmaker.Start;

import com.google.gson.Gson;

public class SaveSlashLoad {
	public static void save(Mod mod, File file){
		try{
			File temp = new File(Start.main.workingDir.getAbsolutePath() + "/temp/" + file.getName() + "/");
			File modtempdir = new File(temp.getAbsolutePath() + "/mod/" + file.getName() + "/");
			temp.mkdirs();
			modtempdir.mkdirs();
			Gson gson = new Gson();
			StringBuilder builder = new StringBuilder();
			for(Item item : mod.items){
				builder.append(gson.toJson(item) + "\n");
			}
			BufferedWriter writer = new BufferedWriter(new FileWriter(modtempdir.getAbsolutePath() + "/items.json"));
			StringBuilder indented = new StringBuilder();
			int indent = 0;
			for(Character character : builder.toString().toCharArray()){
				if(Character.toString(character).contains("{")){
					indented.append(Character.toString(character) + "\n");
					indent += 4;
					for(int i = 0; i<indent; i++){
						builder.append(" ");
					}
				}
				else if(Character.toString(character).contains("}")){
					indented.append("\n" + Character.toString(character));
					indent -= 4;
					for(int i = 0; i<indent; i++){
						builder.append(" ");
					}
				}
				else{
					indented.append(character);
				}
			}
			writer.append(builder.toString());
			writer.close();
			
			builder = new StringBuilder();
			indent = 0;
			for(Character character : mod.save().toCharArray()){
				if(Character.toString(character).contains("{")){
					builder.append(Character.toString(character) + "\n");
					indent += 4;
					for(int i = 0; i<indent; i++){
						builder.append(" ");
					}
				}
				else if(Character.toString(character).contains("}")){
					builder.append("\n" + Character.toString(character));
					indent -= 4;
					for(int i = 0; i<indent; i++){
						builder.append(" ");
					}
				}
				else{
					builder.append(character);
				}
			}
			writer = new BufferedWriter(new FileWriter(modtempdir.getAbsolutePath() + "/mod.json"));
			writer.append(builder.toString());
			writer.close();
			
			ZipOutputStream out;
			if(file.getName().contains("."))
				out = new ZipOutputStream(new FileOutputStream(file.getAbsolutePath()));
			else
				out = new ZipOutputStream(new FileOutputStream(file.getAbsolutePath() + ".zip"));
			for(File f : temp.listFiles()){
				if(f.isDirectory()){
					FileUtils.writeSub(temp.getAbsolutePath(), f, out);
				}
				else{
					FileInputStream in = new FileInputStream(f);
					out.putNextEntry(new ZipEntry(f.getAbsolutePath().replace(temp.getAbsolutePath(), ""))); 

					byte[] b = new byte[1024];
					int count;

					while ((count = in.read(b)) > 0) {
						out.write(b, 0, count);
					}
					in.close();
				}
			}
			out.close();
			FileUtils.removeDirectory(new File(Start.main.workingDir.getAbsolutePath() + "/temp/" + file.getName()));
		}
		catch(Exception e){
			e.printStackTrace();
		}
	}
}
